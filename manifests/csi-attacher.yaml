apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-attacher
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-attacher-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-attacher-role
subjects:
  - kind: ServiceAccount
    name: csi-attacher
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: external-attacher-runner
  apiGroup: rbac.authorization.k8s.io
---
kind: Service
apiVersion: v1
metadata:
  name: csi-attacher-cinderplugin
  namespace: kube-system
  labels:
    app: csi-attacher-cinderplugin
spec:
  selector:
    app: csi-attacher-cinderplugin
  ports:
    - name: dummy
      port: 12345
---
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: csi-attacher-cinderplugin
  namespace: kube-system
spec:
  serviceName: "csi-attacher-cinderplugin"
  replicas: 1
  template:
    metadata:
      labels:
        app: csi-attacher-cinderplugin
    spec:
      serviceAccount: csi-attacher
      containers:
        - name: csi-attacher
          image: quay.io/k8scsi/csi-attacher:v0.3.0
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: cinder
          image: docker.io/k8scloudprovider/cinder-csi-plugin:latest
          args:
            - /bin/cinder-csi-plugin
            - "--nodeid=$(NODE_ID)"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--cloud-config=/etc/cloud/cloud-config.conf"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix://csi/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - mountPath: /etc/cloud/cloud-config.conf
              name: cloudconfig
              readOnly: true
            - mountPath: /etc/ssl/certs/cloud-trust.pem
              name: cloudtrust
              readOnly: true
      volumes:
        - name: socket-dir
          emptyDir: {}
        - hostPath:
            path: /etc/cloud/cloud-config.conf
            type: FileOrCreate
          name: cloudconfig
        - hostPath:
            path: /etc/cloud/cloud-trust.pem
            type: FileOrCreate
          name: cloudtrust
